// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyElectronicShop.Models;

#nullable disable

namespace MyElectronicShop.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20250131205042_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyElectronicShop.Models.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"), 1L, 1);

                    b.Property<int?>("PrId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("CartItemId");

                    b.HasIndex("PrId");

                    b.ToTable("CartItem");

                    b.HasData(
                        new
                        {
                            CartItemId = 1,
                            PrId = 1,
                            Quantity = 1,
                            UserId = 2
                        },
                        new
                        {
                            CartItemId = 2,
                            PrId = 3,
                            Quantity = 2,
                            UserId = 2
                        },
                        new
                        {
                            CartItemId = 3,
                            PrId = 1,
                            Quantity = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("MyElectronicShop.Models.Product", b =>
                {
                    b.Property<int>("PrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("TypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrId");

                    b.HasIndex("TypeId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            PrId = 1,
                            Name = "Hp",
                            Price = 2333.0,
                            TypeId = "Lp",
                            url = "https://i5.walmartimages.com/seo/HP-Pavilion-13-3-FHD-Intel-Core-i3-8GB-RAM-128GB-SSD-Silver_906cf222-d138-430a-8146-d129b0cca3a2_2.f838f300a6e31f50074faf4091a1da7b.jpeg"
                        },
                        new
                        {
                            PrId = 2,
                            Name = "Lenovo",
                            Price = 1933.0,
                            TypeId = "Lp",
                            url = "https://5.imimg.com/data5/DE/DA/QN/SELLER-32244351/lenovo-laptop.jpg"
                        },
                        new
                        {
                            PrId = 3,
                            Name = "Logetich",
                            Price = 200.0,
                            TypeId = "Kb",
                            url = "https://resource.logitechg.com/w_692,c_lpad,ar_4:3,q_auto,f_auto,dpr_2.0/d_transparent.gif/content/dam/gaming/en/non-braid/g213-finch/g213-gallery-1-nb.png?v=1"
                        },
                        new
                        {
                            PrId = 4,
                            Name = "dell",
                            Price = 2300.0,
                            TypeId = "Lp",
                            url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQMKs7Vxec19Gg5sde8PgYCpX8gWxnE95rQc_dOg0Z7zXWhy2k&s"
                        },
                        new
                        {
                            PrId = 5,
                            Name = "IPad",
                            Price = 1000.0,
                            TypeId = "Tb",
                            url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTMQNuL-_Ki109-IuOFLsuA0KqKqVfJFFqD2HuSsoBtWpYYBpQh&s"
                        },
                        new
                        {
                            PrId = 6,
                            Name = "Razer",
                            Price = 400.0,
                            TypeId = "Hp",
                            url = "https://i5.walmartimages.com/seo/Razer-Kraken-V3-Pro-Wireless-Gaming-Headset-for-PC-2-4GHz-Haptics-Chroma-RGB-368g-Black_124e137a-e85f-459b-9fbb-0ac27e9391ef.561e94d10b97d275b6595b557ad4aea3.jpeg"
                        },
                        new
                        {
                            PrId = 7,
                            Name = "Iphone 15 pro max",
                            Price = 1200.0,
                            TypeId = "Ph",
                            url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS7_2BCfJmsRBXN3n7N6JAf3Wz8Qr-DIENaIVioqg0YxffTTGU&s"
                        },
                        new
                        {
                            PrId = 8,
                            Name = "MegaGee",
                            Price = 500.0,
                            TypeId = "Kb",
                            url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTwelPo0iIyzHKB-m-IH86RvUa2E7Q0igaR--CfVZkBkQ-4CLQ&s"
                        });
                });

            modelBuilder.Entity("MyElectronicShop.Models.Types", b =>
                {
                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.ToTable("Type");

                    b.HasData(
                        new
                        {
                            TypeId = "Lp",
                            Name = "Laptop"
                        },
                        new
                        {
                            TypeId = "Ph",
                            Name = "Phone"
                        },
                        new
                        {
                            TypeId = "Kb",
                            Name = "Keyboard"
                        },
                        new
                        {
                            TypeId = "Hp",
                            Name = "HeadPhone"
                        },
                        new
                        {
                            TypeId = "Tb",
                            Name = "Tablet"
                        });
                });

            modelBuilder.Entity("MyElectronicShop.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin@gmail.com",
                            Password = "admin",
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "bsh@gmail.com",
                            Password = "1234",
                            Username = "abdulrahman"
                        });
                });

            modelBuilder.Entity("MyElectronicShop.Models.CartItem", b =>
                {
                    b.HasOne("MyElectronicShop.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("PrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MyElectronicShop.Models.Product", b =>
                {
                    b.HasOne("MyElectronicShop.Models.Types", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
